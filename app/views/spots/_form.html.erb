<%= form_with(model: spot) do |form| %>
  <% if spot.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(spot.errors.count, "error") %> prohibited this spot from being saved:</h2>

      <ul>
        <% spot.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="new_form_1">
    <div>
      <%= form.label :lat, style: "display: block" %>
      <%= form.text_field :lat, readonly: true, class: "block" %>
    </div>
    <div>
      <%= form.label :lng, style: "display: block" %>
      <%= form.text_field :lng, readonly: true, class: "block" %>
    </div>
  </div>

  <div>
      <%= form.label :"写真など", style: "display: block" %>
      <%= form.file_field :photo, readonly: false %>
    </div>

  <div class="new_form_2">
    <div>
      <%= form.label :"名前を入力*", style: "display: block" %>
      <%= form.text_field :name, readonly: false, class:"block-name" %>
    </div>
    <div>
      <%= form.label :"カテゴリ選択*", style: "display: block" %>
      <%= form.collection_select(:category_id, Category.all, :id, :name, {}, {class:"category-select"}) %>
    </div>
  </div>

  <div>
    <%= form.label :"自由記述_text", style: "display: block" %>
    <%= form.text_area  :value, readonly: false, class:"block-text" %>
  </div>
  <div>
    <%= form.label :"URL*", style: "display: block" %>
    <%= form.text_field :spots_url, readonly: false, class:"block-name" %>
  </div>
    
  <div class="btn">
    <%= form.submit class: "btn btn-success" %>
  </div>

  <div id="map" style="height:300px;" data-geolocate-control="on"></div>

</div>

<% end %>

<script>
document.addEventListener('turbo:load', () => {
  const center = <%= spot.new_record? ? [139.7673068, 35.6809591] : [spot.lng, spot.lat] %>
  const map = new geolonia.Map({
    container: 'map',
    center: center,
    zoom: <%= spot.new_record? ? 14 : 16 %>
  })
  const marker = new geolonia.Marker()

  <% if !spot.new_record? %>
  marker.setLngLat(center).addTo(map)
  <% end %>

  function onClick(e) {
    const lngLat = e.lngLat

    if (marker) {
      marker.remove()
    }

    marker.setLngLat([lngLat.lng, lngLat.lat]).addTo(map)
    document.querySelector("#spot_lng").value = lngLat.lng
    document.querySelector("#spot_lat").value = lngLat.lat
  }

  map.on('click', onClick)
})
</script>
